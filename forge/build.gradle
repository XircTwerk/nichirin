architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfig 'nichirin-common.mixins.json'
        mixinConfig 'nichirin.mixins.json'
    }

    runs {
        data {
            data()

            programArgs "--mod", "nichirin"
            programArgs "--all"
            programArgs "--output", file("../common/src/main/generated").absolutePath
            programArgs "--existing", file("../common/src/main/resources").absolutePath
        }
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    // Architectury API
    modApi "dev.architectury:architectury-forge:$rootProject.architectury_api_version"

    // Add your other dependencies here...

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
    // Process mods.toml
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

jar.archiveClassifier = 'dev'